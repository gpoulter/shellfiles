# -*- sh -*-
# vim: set sw=2

## Print ANSI attribute for some named foreground colors
function be_get_ansicolor {
  case "$1" in
    red) echo "01;31" ;;
    green) echo "01;32" ;;
    yellow) echo "01;33" ;;
    blue) echo "01;34" ;;
    magenta) echo "01;35" ;;
    cyan) echo "01;36" ;;
    white) echo "01;37" ;;
  esac
}

# Generate PS1 ANSI sequence for some named foreground color
function be_get_ansiseq {
  echo "\[\033[$(be_get_ansicolor $1)m\]"
}

# Generate string for PS1, with colors based on BE_PS1_ vars
# Prefix string with [vim] if VIMRUNTIME is set
# Prefixe string with user name for non-root
function be_make_prompt {
  [[ "$(id -u)" != 0 ]] && local p_usr="\u@"
  [[ -n "$VIMRUNTIME" ]] && local p_vim="[vim] "
  if [[ -n "$LS_COLORS" ]]; then
    echo "${p_vim}${BE_PS1_UCOLOR}${p_usr}${BE_PS1_HCOLOR}\h:${BE_PS1_WCOLOR}\w\[\033[00m\]\\$ "
  else
    echo "${p_vim}${p_usr}\h:\w\\$ "
  fi
}

## Set PS1 to value from basic_prompt
function be_set_baseprompt { export PS1="$(be_make_prompt)"; }

## Set PS1 with colornames for user, host, workdir
function be_set_colorprompt {
  export BE_PS1_UCOLOR=$(be_get_ansiseq "$1")
  export BE_PS1_HCOLOR=$(be_get_ansiseq "$2")
  export BE_PS1_WCOLOR=$(be_get_ansiseq "$3")
  be_set_baseprompt
}

## Prepend time to PS1
function be_add_timeprompt { export PS1="[\t] ${1:-$PS1}"; }

## Prepend history number to PS1
function be_add_histprompt { export PS1="[\!] ${1:-$PS1}"; }

## Print nickname for git/hg/bzr/svn version control in CWD
## Optional $1 of format string for printf, default "(%s) "
function be_get_branch {
  local dir="$PWD"
  local vcs
  local nick
  while [[ "$dir" != "/" ]]; do
    for vcs in git hg svn bzr; do
      if [[ -d "$dir/.$vcs" ]] && hash "$vcs" &>/dev/null; then
        case "$vcs" in
          git) __git_ps1 "${1:-(%s) }"; return;;
          hg) nick=$(hg branch 2>/dev/null);;
          svn) nick=$(svn info 2>/dev/null\
                | grep -e '^Repository Root:'\
                | sed -e 's#.*/##');;
          bzr)
            local conf="${dir}/.bzr/branch/branch.conf" # normal branch
            [[ -f "$conf" ]] && nick=$(grep -E '^nickname =' "$conf" | cut -d' ' -f 3)
            conf="${dir}/.bzr/branch/location" # colo/lightweight branch
            [[ -z "$nick" ]] && [[ -f "$conf" ]] && nick="$(basename "$(< $conf)")"
            [[ -z "$nick" ]] && nick="$(basename "$(readlink -f "$dir")")";;
        esac
        [[ -n "$nick" ]] && printf "${1:-(%s) }" "$nick"
        return 0
      fi
    done
    dir="$(dirname "$dir")"
  done
}

## Add branch to PS1 (based on $PS1 or $1), formatted as $2
function be_add_vcsprompt {
  export GIT_PS1_SHOWDIRTYSTATE=yes
  export GIT_PS1_SHOWSTASHSTATE=yes
  export GIT_PS1_SHOWUNTRACKEDFILES=yes
  export GIT_PS1_SHOWUPSTREAM=yes
  export PS1="\$(be_get_branch "$2")${1:-$PS1}";
}

## Set fancy prompt, combines args to be_set_colorprompt and be_add_vcsprompt
function be_setall_prompt {
  be_set_colorprompt "${1:-green}" "${2:-green}" "${3:-blue}"
  be_add_vcsprompt "$PS1" "$4"
}
