# -*- sh -*-

## Shortcut for awk evaluation: 3+5/8, '(3+5)*2'
function be_awkeval { awk "BEGIN{ print $* }" ;}
function be_bceval { echo "scale=4; $*" | bc; }

## Concalc calculator
# concalc<<<'sin(32^(1/3))'
## Bash integer arithmetic
# echo $[3+5]
## Arbitrary-precision calculator
# bc -l<<<3/7
## Using pari-gp
# gp -qf<<<'123456! + 0.'

## Get a text wiki summary over DNS
function be_wiki { dig +short txt $1.wp.dg.cx; }

## Make directory and change into it
function be_mkcd { [[ -n $1 ]] && [[ -e $1 ]] || mkdir -p $1 && cd $1; }

## Search Google for $@
function be_google { curl -A Mozilla http://www.google.com/search?q=$@ | html2text -width 80; }

## Colourful 'grep' for $@ with paging
function be_cgrep { grep --line-number --color=always "$@" | less -R; }

## Confirm for cp/mv/rm/crontab
function be_careful {
    if [[ "$1" == "off" ]]; then
        unalias rm cp mv crontab
        echo "rm, cp and mv are now non-interactive."
    else
        alias rm="rm -i"
        alias cp="cp -i"
        alias mv="mv -i"
        alias crontab="crontab -i"
        echo "rm, cp, mv, crontab are now interactive."
    fi
}

## Use hless for syntax highlighting
if [[ -n "$LS_COLORS" ]] && [[ -x "$(type -p source-highlight)" ]]; then
    function be_hiless() {
        INFILE="$1"; shift
        source-highlight --out-format=esc --style-file=$HOME/.esc.style --output=STDOUT --input="$INFILE" "$@" | less -R;
    }
fi

## Removed tilde-files found under $1
function be_rmtilde { [[ -d "$1" ]] && find "$1" -name '*~' -print -delete; }

## Call $@ every $1 seconds
function be_watch {
    local seconds=$1
    shift
    while true; do
        { date '+[%Y-%m-%d %H:%M:%S]'; "$@"; echo; }
        sleep $seconds || return
    done
}

## Functions to import new SSH vars into old screen sessions
function be_ssh_vars {
    for x in SSH_CLIENT SSH_TTY SSH_AUTH_SOCK SSH_CONNECTION DISPLAY; do
        (eval echo $x=\$$x) | sed 's/=/=\"/; s/$/\"/; s/^/export /'
    done 
}
function be_ssh_save { be_ssh_vars > $HOME/.ssh/environ; }
function be_ssh_restore { source $HOME/.ssh/environ; }

## Get geographic location for IP address
function be_geoip {
    IP=$1; [[ -z $IP ]] && IP=$(curl -s icanhazip.com)
    curl -s "http://www.geody.com/geoip.php?ip=$IP" | sed '/^IP:/!d;s/<[^>][^>]*>//g'
}

## Quote URL parameters using Python
function be_urlquote { python -c "import urllib; print urllib.quote_plus(\"$*\")"; }

## Quote URL parameters using Python
function be_urlunquote { python -c "import urllib; print urllib.unquote_plus(\"$*\")"; }

## Learn what the commands are in a directory
function be_learn { ls $1 | xargs whatis | grep -v nothing | less; }

# Prints out the number of non-blank lines in the given files, with whitespace and wc counts
function be_sloc {
    cat $* | awk 'BEGIN { count = 0; space = 0; } { \
        if(match($0,"[0-9a-zA-z]+")) { count++; } else { space++; } }
        END { printf("LOC:  %d\nSPACE: %d\n",count,space); }'
}

function be_setall_funcalias {
    alias ke=be_awkeval
    alias bce=be_bceval
    alias hless=be_hiless
}
