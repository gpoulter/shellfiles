function be_history_env {
    # Timestamp the history entries (important!!)
    export HISTTIMEFORMAT="%Y-%m-%d %T "

    # Ignore lines starting with space, erase earlier dups
    export HISTCONTROL="ignorespace:erasedups"

    # Reduce clutter in the history
    export HISTIGNORE='&:exit:fc:history:ht:h:l:ls:ll'

    # History options
    shopt -s histappend # Append to .bash_history on exit
    shopt -s cmdhist    # Save all lines of multi-line commands in history
    shopt -s histreedit # Edit failed history subs
    shopt -u histverify # Immediately execute history sub
}

## History commands

# Today's history
function ht { history | grep "$(date +%Y-%m-%d)" $@; }

# Grep history
alias h='history|grep'

# Update history from other shells
alias hu='history -n' 

# Print last command as TIME<tab>PWD<tab>COMMAND
function lastcmd { local H=$(history 1); H=$(echo -n ${H/+([0-9])}); echo -e "${H:0:19}\t${PWD}\t${H:20}"; }

# Print top $1 (10) working directories, based on $2 (5000) most recent commands
function topwds { tail -n ${2:-5000} ~/.history | cut -f 2 | sort | uniq -c | sort -n | tail -n ${1:-10}; }

# Print top $1 (10) recent commands, examining first $2 (all) arguments, based on $3 (5000) most recent commands
function topcmds { tail -n ${3:-5000} ~/.history | cut -f 3 | cut -d ' ' -f 1-$2 | sort | uniq -c | sort -n | tail -n ${1:-10}; }

# Unified history
function history_prompt_command { history -a; lastcmd >> ~/.history; history -n; }

# Append to history on displaying next prompt
function be_history_prompt { export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND;} history_prompt_command"; }
