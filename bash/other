## Listing, cd, pager aliases
function be_aliases {
    alias ls='ls --color=auto'  # colorize
    alias ll='ls -alF'     # long:all (ubuntu)
    alias la='ls -A'       # short:almost-all (ubuntu)
    alias l='ls -CF'       # short:visible (ubuntu)
    alias lr='ls -R'       # short:recursive
    alias l1='ls -1F'      # short:oneperline:visible
    alias lu='ls -lF'      # long:visible
    alias lt='ls -lhvrtF'  # long:visible:timesort:reverse
    alias l.='ls -ldF .*'  # long:dotfiles
    alias llr='ls -alR'    # longall:recursive
    alias ly='ls -dl -- */'  # long:directories
    alias ..="cd .."
    alias ...="cd ../.."
    alias ....="cd ../../.."
    alias -- -="cd -"
    alias -- ~="cd ~"
    export PAGER=less
    export LESS='--LONG-PROMPT --RAW-CONTROL-CHARS'
    alias le='less -R' # interpret ascii codes
    alias v='less -R'  # shorter than even 'le'
}

## Directory listing colours
function be_colors {
    if [[ -f "$(type -p dircolors)" ]]; then
        if [[ -f "~/.dircolors" ]]; then
            eval $(dircolors -b "~/.dircolors")
        else
            eval $(dircolors -b)
        fi
    fi
    ## Colorize grep
    if [[ -n "$LS_COLORS" ]]; then
        export GREP_OPTIONS="--color=auto"
    fi
}

## Preview of what LS_COLORS will do
function colorpreview {
   (
       [[ "$LS_COLORS" ]] || eval $(dircolors)
       [[ "$LS_COLORS" ]] || eval $(TERM=xterm dircolors)
       printf "$LS_COLORS"
   ) | tr : '\n' |
   sed 's/\([^=]*\)=\(.*\)/\x1b[\2m\1\x1b[0m\t\2/'
}

## Shell options
function be_shopt {
    # Do not glob . or .. when using .*
    export GLOBIGNORE='.:..'
    shopt -s cdspell      # Correct spelling
    shopt -s checkhash    # Look up commands
    shopt -s checkwinsize # Update LINES and COLUMNS after each command
    shopt -s extglob      # Pattern-matching glob features
    shopt -u dotglob      # Do not include .config files in normal glob
    shopt -u failglob     # Don't fail on nomatch, just leave the *'s in
    shopt -u nullglob     # Don't go to null on nomatch, just leave the *'s in
}

## Use hless for syntax highlighting
if [[ -x "$(type -p source-highlight)" ]]; then
    function hless() {
        INFILE="$1"; shift
        source-highlight --out-format=esc --style-file=$HOME/.esc.style --output=STDOUT --input="$INFILE" "$@" | less -R;
    }
fi

