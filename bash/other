## Listing, cd, pager aliases
function be_set_lsaliases {
    alias ls='ls --color=auto'  # colorize (ubuntu)
    alias ll='ls -alF'     # long:all (ubuntu)
    alias la='ls -A'       # short:almost-all (ubuntu)
    alias l='ls -CF'       # short:visible (ubuntu)
    alias lr='ls -R'       # short:recursive
    alias l1='ls -1F'      # short:oneperline:visible
    alias lu='ls -lF'      # long:visible
    alias lt='ls -lhvrtF'  # long:visible:timesort:reverse
    alias l.='ls -ldF .*'  # long:dotfiles
    alias llr='ls -alR'    # long:all:recursive
    alias ly='ls -dl -- */'  # long:directories
    alias ..="cd .."
    alias ...="cd ../.."
    alias ....="cd ../../.."
    alias -- -="cd -"
    alias -- ~="cd ~"
}

## Set extra aliases
function be_set_aliases {
# Ack-grep
    hash ack-grep &>/dev/null && alias a=ack-grep
# Hilighting less
    hash source-highlight &>/dev/null && alias hless=be_hiless
# Awk calculator
    alias c=be_awkeval
# bc evaluator
    alias bce=be_bceval
# Pager, interpreting ascii codes
    alias p='less -R'
# Sudo shortcut
    alias s='sudo'
# Vim with view read-only files
    alias v='be_vim_view'
# Vim with sudo read-only files
    alias vs='be_vim_sudo'
# What services are running here
    alias whatsopen="sudo nmap -sS -O 127.0.0.1"
# Nice process listing
    alias psx="ps hwwaxfo pid,uname,nice,bsdstart,bsdtime,pcpu,pmem,rss,cmd"
# Get full/absolute path to $1
    alias abspath='readlink -f'
# Convenience for apt-get
    alias can-has="sudo apt-get install"
# Display top processes by memory usage
    alias pmem='ps aux | sort -nk +4 | tail'
}

## Set colors for directory listing 
function be_set_dircolors {
    if hash dircolors &>/dev/null; then
        if [[ -f "~/.dircolors" ]]; then
            eval "$(dircolors -b "~/.dircolors")"
        else
            eval "$(dircolors -b)"
        fi
    fi
    [[ -n "$LS_COLORS" ]] && export GREP_OPTIONS="--color=auto"
}

## Display legend for LS_COLORS 
function be_colorpreview {
   (
       [[ "$LS_COLORS" ]] || eval "$(dircolors)"
       [[ "$LS_COLORS" ]] || eval "$(TERM=xterm dircolors)"
       printf "$LS_COLORS"
   ) | tr : '\n' |
   sed 's/\([^=]*\)=\(.*\)/\x1b[\2m\1\x1b[0m\t\2/'
}

## Set shell options and environment vars
function be_set_shopts {
    export PAGER=less
    export LESS='--LONG-PROMPT --RAW-CONTROL-CHARS'
    export GLOBIGNORE='.:..'
    shopt -s cdspell      # Correct spelling
    shopt -s checkhash    # Look up commands
    shopt -s checkwinsize # Update LINES and COLUMNS after each command
    shopt -s extglob      # Pattern-matching glob features
    shopt -u dotglob      # Do not include .config files in normal glob
    shopt -u failglob     # Don't fail on nomatch, just leave the *'s in
    shopt -u nullglob     # Don't go to null on nomatch, just leave the *'s in
}

# Set terminal title to $@
function be_set_title { echo -ne "\033]2;$@\007"; }

# Set long terminal title 
function be_set_longtitle {
  echo -ne "\033]0;${HOSTNAME%%.*}:${PWD/$HOME/~}\007";
}

# Set short terminal title 
function be_set_shorttitle {
  local wd="${PWD/$HOME/~}";
  local hn="${HOSTNAME%%.*}";
  echo -ne "\033]0;${wd}:${USER:0:1}@${hn}\007";
}

# Set title on each command by calling $1
function be_set_titlecmd {
  if [[ "$TERM" == @(rxvt|xterm) ]]; then
    export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND;} ${1:-be_set_shorttitle}";
  fi
}

## Integrate "other" options
function be_setall_other {
    be_set_shopts
    be_set_dircolors
    be_set_lsaliases
    be_set_aliases
    be_set_titlecmd
}
